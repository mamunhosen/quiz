[{"/home/mamun/Desktop/projects/quiz-app/src/index.js":"1","/home/mamun/Desktop/projects/quiz-app/src/App.js":"2","/home/mamun/Desktop/projects/quiz-app/src/reportWebVitals.js":"3","/home/mamun/Desktop/projects/quiz-app/src/Config/routes.js":"4","/home/mamun/Desktop/projects/quiz-app/src/Components/AppRoutes.js":"5","/home/mamun/Desktop/projects/quiz-app/src/Pages/Answers/index.js":"6","/home/mamun/Desktop/projects/quiz-app/src/Pages/Login/index.js":"7","/home/mamun/Desktop/projects/quiz-app/src/Pages/Questions/index.js":"8","/home/mamun/Desktop/projects/quiz-app/src/Pages/NotFound/index.js":"9","/home/mamun/Desktop/projects/quiz-app/src/Context/index.js":"10","/home/mamun/Desktop/projects/quiz-app/src/Context/actions.js":"11","/home/mamun/Desktop/projects/quiz-app/src/Context/context.js":"12","/home/mamun/Desktop/projects/quiz-app/src/Context/actionTypes.js":"13","/home/mamun/Desktop/projects/quiz-app/src/Context/reducers.js":"14","/home/mamun/Desktop/projects/quiz-app/src/Users/index.js":"15","/home/mamun/Desktop/projects/quiz-app/src/Utils/react-utils.js":"16","/home/mamun/Desktop/projects/quiz-app/src/Components/Navbar/index.js":"17","/home/mamun/Desktop/projects/quiz-app/src/Components/Modal/index.js":"18","/home/mamun/Desktop/projects/quiz-app/src/Components/Delete/index.js":"19","/home/mamun/Desktop/projects/quiz-app/src/Components/EditQuestion/index.js":"20","/home/mamun/Desktop/projects/quiz-app/src/Components/PlayQuiz/index.js":"21","/home/mamun/Desktop/projects/quiz-app/src/Utils/utils.js":"22","/home/mamun/Desktop/projects/quiz-app/src/Components/EditAnswer/index.js":"23","/home/mamun/Desktop/projects/quiz-app/src/Components/AnswerHistory/index.js":"24"},{"size":500,"mtime":1610462418784,"results":"25","hashOfConfig":"26"},{"size":945,"mtime":1610615660968,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610462418784,"results":"28","hashOfConfig":"26"},{"size":594,"mtime":1610532155545,"results":"29","hashOfConfig":"26"},{"size":821,"mtime":1610519550077,"results":"30","hashOfConfig":"26"},{"size":1942,"mtime":1610644903336,"results":"31","hashOfConfig":"26"},{"size":2748,"mtime":1610607770180,"results":"32","hashOfConfig":"26"},{"size":3338,"mtime":1610632230331,"results":"33","hashOfConfig":"26"},{"size":167,"mtime":1610556470510,"results":"34","hashOfConfig":"26"},{"size":715,"mtime":1610633996243,"results":"35","hashOfConfig":"26"},{"size":6984,"mtime":1610645768495,"results":"36","hashOfConfig":"26"},{"size":1974,"mtime":1610615604675,"results":"37","hashOfConfig":"26"},{"size":1588,"mtime":1610644847588,"results":"38","hashOfConfig":"26"},{"size":4629,"mtime":1610644256151,"results":"39","hashOfConfig":"26"},{"size":420,"mtime":1610646208565,"results":"40","hashOfConfig":"26"},{"size":1163,"mtime":1610643860505,"results":"41","hashOfConfig":"26"},{"size":1505,"mtime":1610535435313,"results":"42","hashOfConfig":"26"},{"size":560,"mtime":1610548440327,"results":"43","hashOfConfig":"26"},{"size":461,"mtime":1610603686238,"results":"44","hashOfConfig":"26"},{"size":2046,"mtime":1610607702773,"results":"45","hashOfConfig":"26"},{"size":2817,"mtime":1610643934538,"results":"46","hashOfConfig":"26"},{"size":225,"mtime":1610642227325,"results":"47","hashOfConfig":"26"},{"size":2127,"mtime":1610638869713,"results":"48","hashOfConfig":"26"},{"size":709,"mtime":1610645639528,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ungxa3",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mamun/Desktop/projects/quiz-app/src/index.js",[],["101","102"],"/home/mamun/Desktop/projects/quiz-app/src/App.js",[],"/home/mamun/Desktop/projects/quiz-app/src/reportWebVitals.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Config/routes.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/AppRoutes.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Pages/Answers/index.js",["103"],"/home/mamun/Desktop/projects/quiz-app/src/Pages/Login/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Pages/Questions/index.js",["104"],"import React, { useState, useEffect } from \"react\";\n\nimport Modal from \"../../Components/Modal\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport { uuid } from \"../../Utils/utils\";\nimport {\n  getQuestions,\n  addQuestion,\n  useQuestionState,\n  useQuestionDispatch,\n} from \"../../Context\";\nimport Delete from \"../../Components/Delete\";\nimport EditQuestion from \"../../Components/EditQuestion\";\n\nimport \"./questions.css\";\n\nconst Questions = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useQuestionDispatch();\n  const { loading, errorMessage, questions } = useQuestionState();\n\n  const validateQuestionForm = (values) => {\n    const errors = {};\n    if (values.question === \"\") {\n      errors.question = \"Question must not be empty\";\n    }\n    return errors;\n  };\n\n  const doSubmit = async ({ question }) => {\n    const payload = { id: uuid(), title: question };\n    const response = await addQuestion(dispatch, payload);\n    if (response.length > 0) {\n      setIsOpen(false);\n    }\n  };\n\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      question: \"\",\n    },\n    doSubmit,\n    validateQuestionForm\n  );\n\n  useEffect(() => {\n    getQuestions(dispatch);\n  }, []);\n\n  const loadingMessage = <div className=\"loading\">Loading questions...</div>;\n  const content = (\n    <>\n      <div className=\"question-header\">\n        <div className=\"question-header__serial\">#</div>\n        <div className=\"question-header__title\">Title</div>\n        <div className=\"question-header__action\">Action</div>\n      </div>\n      <div className=\"questions\">\n        {questions.length > 0 ? (\n          questions.map((question, index) => (\n            <div className=\"question\" key={question.id}>\n              <div className=\"question__serial\">{index + 1}</div>\n              <div className=\"question__title\">{question.title}</div>\n              <div className=\"question__action\">\n                <EditQuestion id={question.id} question={question.title} />\n                <Delete id={question.id} />\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"no--result\">No question added yet!!!</p>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"question-wrapper\">\n      <button className=\"add-question\" onClick={() => setIsOpen(true)}>\n        Add Question\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\n          <div className=\"input-group\">\n            <label className=\"input-label\" htmlFor=\"question__title\">\n              Question Title\n            </label>\n            <input\n              type=\"text\"\n              className=\"input-field\"\n              id=\"question__title\"\n              name=\"question\"\n              onChange={onChange}\n              value={values.question}\n            />\n            {errors.question && <p className=\"error\">{errors.question}</p>}\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Add\"\n            className=\"btn-submit question-submit--btn\"\n            disabled={loading}\n          />\n        </form>\n      </Modal>\n      {loading ? loadingMessage : content}\n    </div>\n  );\n};\n\nexport default Questions;\n","/home/mamun/Desktop/projects/quiz-app/src/Pages/NotFound/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Context/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Context/actions.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Context/context.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Context/actionTypes.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Context/reducers.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Users/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Utils/react-utils.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/Navbar/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/Modal/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/Delete/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/EditQuestion/index.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/PlayQuiz/index.js",["105","106"],"/home/mamun/Desktop/projects/quiz-app/src/Utils/utils.js",[],"/home/mamun/Desktop/projects/quiz-app/src/Components/EditAnswer/index.js",["107"],"import React, { useState } from \"react\";\n\nimport { editAnswers, useAnswerDispatch } from \"../../Context\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport Modal from \"../Modal\";\n\nimport \"./editanswer.css\";\n\nconst EditAnswer = ({ disabled, answerObj, user }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useAnswerDispatch();\n\n  const validateEditAnswerForm = (values) => {\n    const errors = {};\n    if (values.answer === \"\") {\n      errors.answer = \"Answer must not be empty\";\n    }\n    return errors;\n  };\n  const doSubmit = async ({ answer }) => {\n    const histories = [...answerObj.editHistories, answerObj.answer];\n    const payload = { ...answerObj, answer, editHistories: histories };\n    const user_id = user.isAdmin ? \"\" : user.id;\n    const response = await editAnswers(payload, dispatch, user_id);\n    if (response) {\n      setIsOpen(false);\n    }\n  };\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      answer: answerObj.answer,\n    },\n    doSubmit,\n    validateEditAnswerForm,\n    false\n  );\n  return (\n    <>\n      <button\n        disabled={disabled}\n        className=\"btn btn--edit\"\n        onClick={() => setIsOpen(true)}\n      >\n        Edit\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          <div className=\"input-group\">\n            <label className=\"input-label\" htmlFor=\"answer\">\n              {answerObj.title}\n            </label>\n            <textarea\n              name=\"\"\n              id=\"answer\"\n              rows=\"5\"\n              onChange={onChange}\n              name=\"answer\"\n              className=\"textarea\"\n              placeholder=\"Describe yourself here...\"\n              value={values.answer}\n            ></textarea>\n\n            {errors.answer && <p className=\"error\">{errors.answer}</p>}\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Update\"\n            className=\"btn-submit question-submit--btn\"\n          />\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAnswer;\n","/home/mamun/Desktop/projects/quiz-app/src/Components/AnswerHistory/index.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":22,"column":6,"nodeType":"114","endLine":22,"endColumn":8,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":48,"column":6,"nodeType":"114","endLine":48,"endColumn":8,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"118","line":64,"column":6,"nodeType":"114","endLine":64,"endColumn":8,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":77,"column":11,"nodeType":"122","endLine":77,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":57,"column":15,"nodeType":"122","endLine":57,"endColumn":28},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'user.id', and 'user.isAdmin'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.id'. Either include them or remove the dependency array.",["127"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, user.id, user.isAdmin]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"138","text":"139"},[592,594],"[dispatch, user.id, user.isAdmin]",[1212,1214],"[dispatch]",[1494,1496],"[dispatch, user.id]"]