{"version":3,"sources":["Utils/react-utils.js","Context/actionTypes.js","Users/index.js","Context/actions.js","Context/reducers.js","Context/context.js","Pages/Login/index.js","Components/Modal/index.js","Components/AnswerHistory/index.js","Components/EditAnswer/index.js","Utils/utils.js","Components/PlayQuiz/index.js","Pages/Answers/index.js","Components/Delete/index.js","Components/EditQuestion/index.js","Pages/Questions/index.js","Config/routes.js","Pages/NotFound/index.js","Components/AppRoutes.js","Components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","initialState","callback","validate","clearField","useState","values","setValues","errors","setErrors","validateProperty","name","value","obj","errorObj","Object","keys","length","onChange","input","target","tempErrors","errorMessage","onSubmit","e","preventDefault","errorsObj","REQUEST_LOGIN","LOGIN_SUCCESS","LOGOUT","LOGIN_ERROR","LOAD_QUESTIONS_IN_PROGRESS","LOAD_QUESTIONS_IN_SUCCESS","LOAD_QUESTIONS_IN_FAILURE","ADD_QUESTION_IN_PROGRESS","ADD_QUESTION_IN_SUCCESS","ADD_QUESTION_IN_FAILURE","EDIT_QUESTION_IN_PROGRESS","EDIT_QUESTION_IN_SUCCESS","EDIT_QUESTION_IN_FAILURE","DELETE_QUESTION","LOAD_ANSWERS_IN_PROGRESS","LOAD_ANSWERS_IN_SUCCESS","LOAD_ANSWERS_IN_FAILURE","LOAD_QUIZES_IN_PROGRESS","LOAD_QUIZES_IN_SUCCESS","LOAD_QUIZES_IN_FAILURE","ADD_QUIZ_IN_PROGRESS","ADD_QUIZ_IN_SUCCESS","ADD_QUIZ_IN_FAILURE","EDIT_QUIZ_IN_PROGRESS","EDIT_QUIZ_IN_SUCCESS","EDIT_QUIZ_IN_FAILURE","users","id","email","password","isAdmin","loginUser","dispatch","loginPayload","a","type","user","find","payload","localStorage","setItem","JSON","stringify","error","questions","getItem","parse","addQuestion","editQuestion","map","question","title","deleteQuestion","deletableQues","ques","deletableQuesIndex","indexOf","splice","userId","answers","filter","answer","user_id","getQuizQuestions","allQuestions","allAnswers","givenQuesIds","question_id","quizQuestions","item","includes","submitQuiz","quizes","editAnswers","removeItem","loading","AuthReducer","state","action","QuestionsState","QuestionReducer","AnswersState","AnswerReducer","AuthStateContext","React","createContext","AuthDispatchContext","QuestionContext","QuestionDispatchContext","AnswerContext","AnswerDispatchContext","useAuthState","useContext","useAuthDispatch","useQuestionState","useQuestionDispatch","useAnswerState","useAnswerDispatch","AuthProvider","children","useReducer","Provider","QuestionProvider","AnswerProvider","Login","props","currentUser","response","history","push","console","log","test","to","pathname","className","noValidate","htmlFor","disabled","Modal","open","onClose","ReactDOM","createPortal","onClick","document","getElementById","AnswerHistory","histories","isOpen","setIsOpen","index","EditAnswer","answerObj","doSubmit","editHistories","rows","uuid","replace","c","r","Math","random","toString","PlayQuiz","quiz","property","useEffect","Answers","getAnswers","loadingMessage","content","Delete","handleClick","window","confirm","EditQuestion","Questions","getQuestions","routes","path","component","isPrivate","onlyAdmin","AppRoutes","Component","rest","userDetails","render","Navbar","setOpen","prevOpen","logout","location","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.15d9be8a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (\n  initialState = {},\n  callback,\n  validate,\n  clearField = true\n) => {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const errorObj = validate(obj);\n    if (Object.keys(errorObj).length === 0) {\n      return null;\n    } else {\n      return errorObj[name];\n    }\n  };\n\n  const onChange = ({ target: input }) => {\n    const tempErrors = { ...errors };\n    const errorMessage = validateProperty(input);\n    if (errorMessage) tempErrors[input.name] = errorMessage;\n    else delete tempErrors[input.name];\n\n    setValues({\n      ...values,\n      [input.name]: input.value,\n    });\n    setErrors(tempErrors);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const errorsObj = validate(values);\n\n    if (Object.keys(errorsObj).length === 0) {\n      callback(values);\n      if (clearField) {\n        setValues(initialState);\n      }\n    } else {\n      setErrors(errorsObj);\n    }\n  };\n  return {\n    onChange,\n    onSubmit,\n    values,\n    errors,\n  };\n};\n","export const REQUEST_LOGIN = \"REQUEST_LOGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\n\nexport const LOAD_QUESTIONS_IN_PROGRESS = \"LOAD_QUESTIONS_IN_PROGRESS\";\nexport const LOAD_QUESTIONS_IN_SUCCESS = \"LOAD_QUESTIONS_IN_SUCCESS\";\nexport const LOAD_QUESTIONS_IN_FAILURE = \"LOAD_QUESTIONS_IN_FAILURE\";\nexport const ADD_QUESTION_IN_PROGRESS = \"ADD_QUESTION_IN_PROGRESS\";\nexport const ADD_QUESTION_IN_SUCCESS = \"ADD_QUESTION_IN_SUCCESS\";\nexport const ADD_QUESTION_IN_FAILURE = \"ADD_QUESTION_IN_FAILURE\";\nexport const EDIT_QUESTION_IN_PROGRESS = \"EDIT_QUESTION_IN_PROGRESS\";\nexport const EDIT_QUESTION_IN_SUCCESS = \"EDIT_QUESTION_IN_SUCCESS\";\nexport const EDIT_QUESTION_IN_FAILURE = \"EDIT_QUESTION_IN_FAILURE\";\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\n\nexport const LOAD_ANSWERS_IN_PROGRESS = \"LOAD_ANSWERS_IN_PROGRESS\";\nexport const LOAD_ANSWERS_IN_SUCCESS = \"LOAD_ANSWERS_IN_SUCCESS\";\nexport const LOAD_ANSWERS_IN_FAILURE = \"LOAD_ANSWERS_IN_FAILURE\";\nexport const LOAD_QUIZES_IN_PROGRESS = \"LOAD_QUIZES_IN_PROGRESS\";\nexport const LOAD_QUIZES_IN_SUCCESS = \"LOAD_QUIZES_IN_SUCCESS\";\nexport const LOAD_QUIZES_IN_FAILURE = \"LOAD_QUIZES_IN_FAILURE\";\nexport const ADD_QUIZ_IN_PROGRESS = \"ADD_QUIZ_IN_PROGRESS\";\nexport const ADD_QUIZ_IN_SUCCESS = \"ADD_QUIZ_IN_SUCCESS\";\nexport const ADD_QUIZ_IN_FAILURE = \"ADD_QUIZ_IN_FAILURE\";\nexport const EDIT_QUIZ_IN_PROGRESS = \"EDIT_QUIZ_IN_PROGRESS\";\nexport const EDIT_QUIZ_IN_SUCCESS = \"EDIT_QUIZ_IN_SUCCESS\";\nexport const EDIT_QUIZ_IN_FAILURE = \"EDIT_QUIZ_IN_FAILURE\";\n","const users = [\n  {\n    id: 1,\n    name: \"Mamun Hosen\",\n    email: \"hossainmamun278@gmail.com\",\n    password: \"user@123\",\n    isAdmin: false,\n  },\n  {\n    id: 2,\n    name: \"Admin User\",\n    email: \"admin@gmail.com\",\n    password: \"admin@123\",\n    isAdmin: true,\n  },\n  {\n    id: 2,\n    name: \"another user\",\n    email: \"another@gmail.com\",\n    password: \"another@123\",\n    isAdmin: false,\n  },\n];\n\nexport default users;\n","import {\n  REQUEST_LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOAD_QUESTIONS_IN_PROGRESS,\n  LOAD_QUESTIONS_IN_SUCCESS,\n  LOAD_QUESTIONS_IN_FAILURE,\n  ADD_QUESTION_IN_SUCCESS,\n  ADD_QUESTION_IN_PROGRESS,\n  ADD_QUESTION_IN_FAILURE,\n  EDIT_QUESTION_IN_SUCCESS,\n  EDIT_QUESTION_IN_PROGRESS,\n  EDIT_QUESTION_IN_FAILURE,\n  DELETE_QUESTION,\n  LOAD_ANSWERS_IN_PROGRESS,\n  LOAD_ANSWERS_IN_SUCCESS,\n  LOAD_ANSWERS_IN_FAILURE,\n  LOAD_QUIZES_IN_PROGRESS,\n  LOAD_QUIZES_IN_SUCCESS,\n  LOAD_QUIZES_IN_FAILURE,\n  ADD_QUIZ_IN_FAILURE,\n  ADD_QUIZ_IN_PROGRESS,\n  ADD_QUIZ_IN_SUCCESS,\n  EDIT_QUIZ_IN_FAILURE,\n  EDIT_QUIZ_IN_PROGRESS,\n  EDIT_QUIZ_IN_SUCCESS,\n  LOGOUT,\n} from \"./actionTypes\";\nimport users from \"../Users\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  try {\n    dispatch({ type: REQUEST_LOGIN });\n    const user = users.find(\n      (user) =>\n        user.email === loginPayload.email &&\n        user.password === loginPayload.password\n    );\n    if (user) {\n      delete user.password;\n      dispatch({ type: LOGIN_SUCCESS, payload: user });\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      return user;\n    }\n    dispatch({ type: LOGIN_ERROR, error: \"Invalid Username/Password\" });\n    return;\n  } catch (error) {\n    dispatch({\n      type: LOGIN_ERROR,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function getQuestions(dispatch) {\n  try {\n    dispatch({ type: LOAD_QUESTIONS_IN_PROGRESS });\n    const questions = localStorage.getItem(\"questions\")\n      ? JSON.parse(localStorage.getItem(\"questions\"))\n      : [];\n    dispatch({ type: LOAD_QUESTIONS_IN_SUCCESS, payload: questions });\n  } catch (error) {\n    dispatch({\n      type: LOAD_QUESTIONS_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function addQuestion(dispatch, payload) {\n  try {\n    dispatch({ type: ADD_QUESTION_IN_PROGRESS });\n    let questions = localStorage.getItem(\"questions\")\n      ? JSON.parse(localStorage.getItem(\"questions\"))\n      : [];\n    questions = [...questions, payload];\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\n    dispatch({ type: ADD_QUESTION_IN_SUCCESS, payload: questions });\n    return questions;\n  } catch (error) {\n    dispatch({\n      type: ADD_QUESTION_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function editQuestion(dispatch, payload) {\n  try {\n    dispatch({ type: EDIT_QUESTION_IN_PROGRESS });\n    let questions = localStorage.getItem(\"questions\")\n      ? JSON.parse(localStorage.getItem(\"questions\"))\n      : [];\n    questions = questions.map((question) => {\n      if (question.id === payload.id) {\n        question.title = payload.title;\n      }\n      return question;\n    });\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\n    dispatch({ type: EDIT_QUESTION_IN_SUCCESS, payload: questions });\n    return questions;\n  } catch (error) {\n    dispatch({\n      type: EDIT_QUESTION_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function deleteQuestion(dispatch, id) {\n  let questions = localStorage.getItem(\"questions\")\n    ? JSON.parse(localStorage.getItem(\"questions\"))\n    : [];\n  const deletableQues = questions.find((ques) => ques.id === id);\n  const deletableQuesIndex = questions.indexOf(deletableQues);\n  if (deletableQuesIndex > -1) {\n    questions.splice(deletableQuesIndex, 1);\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\n    dispatch({ type: DELETE_QUESTION, payload: questions });\n  }\n}\n\nexport async function getAnswers(dispatch, userId) {\n  try {\n    dispatch({ type: LOAD_ANSWERS_IN_PROGRESS });\n    let answers = localStorage.getItem(\"answers\")\n      ? JSON.parse(localStorage.getItem(\"answers\"))\n      : [];\n    if (userId) {\n      answers = answers.filter((answer) => answer.user_id === userId);\n    }\n    dispatch({ type: LOAD_ANSWERS_IN_SUCCESS, payload: answers });\n  } catch (error) {\n    dispatch({\n      type: LOAD_ANSWERS_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function getQuizQuestions(userId, dispatch) {\n  try {\n    dispatch({ type: LOAD_QUIZES_IN_PROGRESS });\n    const allQuestions = localStorage.getItem(\"questions\")\n      ? JSON.parse(localStorage.getItem(\"questions\"))\n      : [];\n    const allAnswers = localStorage.getItem(\"answers\")\n      ? JSON.parse(localStorage.getItem(\"answers\"))\n      : [];\n    const givenQuesIds = allAnswers.map((answer) => {\n      if (answer.user_id === userId) {\n        return answer.question_id;\n      }\n      return null;\n    });\n    const quizQuestions = allQuestions.filter(\n      (item) => !givenQuesIds.includes(item.id)\n    );\n    dispatch({ type: LOAD_QUIZES_IN_SUCCESS, payload: quizQuestions });\n  } catch (error) {\n    dispatch({\n      type: LOAD_QUIZES_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function submitQuiz(payload, dispatch, user) {\n  try {\n    dispatch({ type: ADD_QUIZ_IN_PROGRESS });\n    let allAnswers = localStorage.getItem(\"answers\")\n      ? JSON.parse(localStorage.getItem(\"answers\"))\n      : [];\n    allAnswers = [...allAnswers, ...payload];\n    localStorage.setItem(\"answers\", JSON.stringify(allAnswers));\n    if (!user.isAdmin) {\n      allAnswers = allAnswers.filter((answer) => answer.user_id === user.id);\n    }\n    const allQuestions = localStorage.getItem(\"questions\")\n      ? JSON.parse(localStorage.getItem(\"questions\"))\n      : [];\n    const givenQuesIds = allAnswers.map((answer) => {\n      if (answer.user_id === user.id) {\n        return answer.question_id;\n      }\n      return null;\n    });\n    const quizQuestions = allQuestions.filter(\n      (item) => !givenQuesIds.includes(item.id)\n    );\n    dispatch({\n      type: ADD_QUIZ_IN_SUCCESS,\n      payload: { answers: allAnswers, quizes: quizQuestions },\n    });\n    return true;\n  } catch (error) {\n    dispatch({\n      type: ADD_QUIZ_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function editAnswers(payload, dispatch, userId) {\n  try {\n    dispatch({ type: EDIT_QUIZ_IN_PROGRESS });\n    let answers = localStorage.getItem(\"answers\")\n      ? JSON.parse(localStorage.getItem(\"answers\"))\n      : [];\n    answers = answers.map((answer) => {\n      if (answer.id === payload.id) {\n        return payload;\n      }\n      return answer;\n    });\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\n    if (userId) {\n      answers = answers.filter((answer) => answer.user_id === userId);\n    }\n    dispatch({ type: EDIT_QUIZ_IN_SUCCESS, payload: answers });\n    return true;\n  } catch (error) {\n    dispatch({\n      type: EDIT_QUIZ_IN_FAILURE,\n      error: \"Something went wrong!! Please try again later\",\n    });\n  }\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: LOGOUT });\n  localStorage.removeItem(\"currentUser\");\n}\n","import {\n  REQUEST_LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGOUT,\n  LOAD_QUESTIONS_IN_PROGRESS,\n  LOAD_QUESTIONS_IN_SUCCESS,\n  LOAD_QUESTIONS_IN_FAILURE,\n  ADD_QUESTION_IN_FAILURE,\n  ADD_QUESTION_IN_PROGRESS,\n  ADD_QUESTION_IN_SUCCESS,\n  EDIT_QUESTION_IN_FAILURE,\n  EDIT_QUESTION_IN_PROGRESS,\n  EDIT_QUESTION_IN_SUCCESS,\n  DELETE_QUESTION,\n  LOAD_ANSWERS_IN_FAILURE,\n  LOAD_ANSWERS_IN_SUCCESS,\n  LOAD_ANSWERS_IN_PROGRESS,\n  LOAD_QUIZES_IN_FAILURE,\n  LOAD_QUIZES_IN_SUCCESS,\n  LOAD_QUIZES_IN_PROGRESS,\n  ADD_QUIZ_IN_FAILURE,\n  ADD_QUIZ_IN_SUCCESS,\n  ADD_QUIZ_IN_PROGRESS,\n  EDIT_QUIZ_IN_FAILURE,\n  EDIT_QUIZ_IN_PROGRESS,\n  EDIT_QUIZ_IN_SUCCESS,\n} from \"./actionTypes\";\n\nconst user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\n  : \"\";\n\nexport const initialState = {\n  user: \"\" || user,\n  loading: false,\n  errorMessage: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_LOGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        errorMessage: \"\",\n        loading: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: \"\",\n      };\n\n    case LOGIN_ERROR:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const QuestionsState = {\n  questions: [],\n  loading: false,\n  errorMessage: null,\n};\n\nexport const QuestionReducer = (state = QuestionsState, action) => {\n  switch (action.type) {\n    case LOAD_QUESTIONS_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_QUESTIONS_IN_SUCCESS:\n      return {\n        ...state,\n        questions: action.payload,\n        loading: false,\n      };\n    case LOAD_QUESTIONS_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case ADD_QUESTION_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_QUESTION_IN_SUCCESS:\n      return {\n        ...state,\n        questions: action.payload,\n        loading: false,\n      };\n    case ADD_QUESTION_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case EDIT_QUESTION_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case EDIT_QUESTION_IN_SUCCESS:\n      return {\n        ...state,\n        questions: action.payload,\n        loading: false,\n      };\n    case EDIT_QUESTION_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case DELETE_QUESTION:\n      return {\n        ...state,\n        questions: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const AnswersState = {\n  answers: [],\n  loading: false,\n  errorMessage: null,\n  quizes: [],\n};\n\nexport const AnswerReducer = (state = AnswersState, action) => {\n  switch (action.type) {\n    case LOAD_ANSWERS_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_ANSWERS_IN_SUCCESS:\n      return {\n        ...state,\n        answers: action.payload,\n        loading: false,\n      };\n    case LOAD_ANSWERS_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case LOAD_QUIZES_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_QUIZES_IN_SUCCESS:\n      return {\n        ...state,\n        quizes: action.payload,\n        loading: false,\n      };\n    case LOAD_QUIZES_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    case ADD_QUIZ_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_QUIZ_IN_SUCCESS:\n      return {\n        ...state,\n        answers: action.payload.answers,\n        quizes: action.payload.quizes,\n        loading: false,\n      };\n    case ADD_QUIZ_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case EDIT_QUIZ_IN_PROGRESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case EDIT_QUIZ_IN_SUCCESS:\n      return {\n        ...state,\n        answers: action.payload,\n        loading: false,\n      };\n    case EDIT_QUIZ_IN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useContext } from \"react\";\nimport {\n  initialState,\n  AuthReducer,\n  QuestionsState,\n  QuestionReducer,\n  AnswersState,\n  AnswerReducer,\n} from \"./reducers\";\n\nconst AuthStateContext = React.createContext();\nconst AuthDispatchContext = React.createContext();\nconst QuestionContext = React.createContext();\nconst QuestionDispatchContext = React.createContext();\nconst AnswerContext = React.createContext();\nconst AnswerDispatchContext = React.createContext();\n\nexport function useAuthState() {\n  return useContext(AuthStateContext);\n}\n\nexport function useAuthDispatch() {\n  return useContext(AuthDispatchContext);\n}\n\nexport function useQuestionState() {\n  return useContext(QuestionContext);\n}\n\nexport function useQuestionDispatch() {\n  return useContext(QuestionDispatchContext);\n}\n\nexport function useAnswerState() {\n  return useContext(AnswerContext);\n}\n\nexport function useAnswerDispatch() {\n  return useContext(AnswerDispatchContext);\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\n\n  return (\n    <AuthStateContext.Provider value={user}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n\nexport const QuestionProvider = ({ children }) => {\n  const [questions, dispatch] = useReducer(QuestionReducer, QuestionsState);\n\n  return (\n    <QuestionContext.Provider value={questions}>\n      <QuestionDispatchContext.Provider value={dispatch}>\n        {children}\n      </QuestionDispatchContext.Provider>\n    </QuestionContext.Provider>\n  );\n};\n\nexport const AnswerProvider = ({ children }) => {\n  const [answers, dispatch] = useReducer(AnswerReducer, AnswersState);\n\n  return (\n    <AnswerContext.Provider value={answers}>\n      <AnswerDispatchContext.Provider value={dispatch}>\n        {children}\n      </AnswerDispatchContext.Provider>\n    </AnswerContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { useForm } from \"../../Utils/react-utils\";\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\n\nimport \"./login.css\";\n\nconst Login = (props) => {\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage, user: currentUser } = useAuthState();\n\n  const validateLoginForm = (values) => {\n    const errors = {};\n    if (values.email === \"\") {\n      errors.email = \"Email must not be empty\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = \"Email address is invalid\";\n    }\n\n    if (values.password === \"\") {\n      errors.password = \"Password must not be empty\";\n    }\n\n    return errors;\n  };\n\n  const doSubmit = async (user) => {\n    try {\n      const response = await loginUser(dispatch, {\n        email: user.email,\n        password: user.password,\n      });\n      if (!response) return;\n      if (response.isAdmin) {\n        props.history.push(\"/questions\");\n      } else {\n        props.history.push(\"/answers\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    doSubmit,\n    validateLoginForm,\n    false\n  );\n\n  if (currentUser) {\n    return currentUser.isAdmin ? (\n      <Redirect to={{ pathname: \"/questions\" }} />\n    ) : (\n      <Redirect to={{ pathname: \"/answers\" }} />\n    );\n  }\n  return (\n    <div className=\"login-wrapper\">\n      <form className=\"login-form\" onSubmit={onSubmit} noValidate>\n        <h2 className=\"login__headline\">Login</h2>\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            type=\"text\"\n            className=\"input-field\"\n            id=\"email\"\n            name=\"email\"\n            onChange={onChange}\n            value={values.email}\n          />\n          {errors.email && <p className=\"error\">{errors.email}</p>}\n        </div>\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"input-field\"\n            id=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            value={values.password}\n          />\n          {errors.password && <p className=\"error\">{errors.password}</p>}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          className=\"btn-submit\"\n          disabled={loading}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./modal.css\";\n\nconst Modal = ({ children, open, onClose }) => {\n  if (!open) return null;\n  return ReactDOM.createPortal(\n    <>\n      <div className=\"overlay\" />\n      <div className=\"modal\">\n        <div className=\"modal__header\">\n          <span onClick={onClose} className=\"modal__close\">\n            &times;\n          </span>\n        </div>\n        <div className=\"modal__body\">{children}</div>\n      </div>\n    </>,\n    document.getElementById(\"modal\")\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\n\nimport Modal from \"../Modal\";\n\nimport \"./answerhistory.css\";\n\nconst AnswerHistory = ({ histories }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <button className=\"previous-btn\" onClick={() => setIsOpen(true)}>\n        Prev Answers\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        {histories.length > 0 ? (\n          histories.map((history, index) => (\n            <p className=\"history\" key={index}>\n              {history}\n            </p>\n          ))\n        ) : (\n          <p className=\"no--result\">No rows found!!!</p>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default AnswerHistory;\n","import React, { useState } from \"react\";\n\nimport { editAnswers, useAnswerDispatch } from \"../../Context\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport Modal from \"../Modal\";\n\nimport \"./editanswer.css\";\n\nconst EditAnswer = ({ disabled, answerObj, user }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useAnswerDispatch();\n\n  const validateEditAnswerForm = (values) => {\n    const errors = {};\n    if (values.answer === \"\") {\n      errors.answer = \"Answer must not be empty\";\n    }\n    return errors;\n  };\n  const doSubmit = async ({ answer }) => {\n    const histories = [...answerObj.editHistories, answerObj.answer];\n    const payload = { ...answerObj, answer, editHistories: histories };\n    const user_id = user.isAdmin ? \"\" : user.id;\n    const response = await editAnswers(payload, dispatch, user_id);\n    if (response) {\n      setIsOpen(false);\n    }\n  };\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      answer: answerObj.answer,\n    },\n    doSubmit,\n    validateEditAnswerForm,\n    false\n  );\n  return (\n    <>\n      <button\n        disabled={disabled}\n        className=\"btn btn--edit\"\n        onClick={() => setIsOpen(true)}\n      >\n        Edit\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          <div className=\"input-group\">\n            <label className=\"input-label\" htmlFor=\"answer\">\n              {answerObj.title}\n            </label>\n            <textarea\n              name=\"\"\n              id=\"answer\"\n              rows=\"5\"\n              onChange={onChange}\n              name=\"answer\"\n              className=\"textarea\"\n              placeholder=\"Describe yourself here...\"\n              value={values.answer}\n            ></textarea>\n\n            {errors.answer && <p className=\"error\">{errors.answer}</p>}\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Update\"\n            className=\"btn-submit question-submit--btn\"\n          />\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAnswer;\n","export const uuid = () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  getQuizQuestions,\n  submitQuiz,\n  useAnswerState,\n  useAnswerDispatch,\n} from \"../../Context\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport { uuid } from \"../../Utils/utils\";\nimport Modal from \"../Modal\";\n\nimport \"./playquiz.css\";\n\nconst PlayQuiz = ({ user }) => {\n  const dispatch = useAnswerDispatch();\n  const { quizes } = useAnswerState();\n  const [isOpen, setIsOpen] = useState(false);\n  const validateQuestionForm = (values) => {\n    const errors = {};\n    for (const property in values) {\n      if (values[property] === \"\") {\n        errors[property] = \"Answer field must not be empty\";\n      }\n    }\n\n    return errors;\n  };\n\n  const doSubmit = async (answers) => {\n    const payload = quizes.map((quiz) => {\n      return {\n        ...quiz,\n        id: uuid(),\n        question_id: quiz.id,\n        answer: answers[quiz.id],\n        user_id: user.id,\n        editHistories: [],\n      };\n    });\n    const response = await submitQuiz(payload, dispatch, user);\n    if (response) {\n      setIsOpen(false);\n    }\n  };\n\n  const initialState = () => {\n    let obj = {};\n    for (let index = 0; index < quizes.length; index++) {\n      obj[quizes[index].id] = \"\";\n    }\n    return obj;\n  };\n  const { onChange, onSubmit, values, errors } = useForm(\n    initialState(),\n    doSubmit,\n    validateQuestionForm\n  );\n\n  useEffect(() => {\n    (async () => {\n      await getQuizQuestions(user.id, dispatch);\n    })();\n  }, []);\n\n  const renderQuizContent = () => {\n    return quizes.map((quiz, index) => (\n      <div className=\"input-group\" key={quiz.id}>\n        <label className=\"input-label\" htmlFor={`question__title${index + 1}`}>\n          {quiz.title}\n        </label>\n        <textarea\n          name=\"\"\n          id={`question__title${index + 1}`}\n          rows=\"5\"\n          onChange={onChange}\n          name={quiz.id}\n          className=\"textarea\"\n          placeholder=\"Describe yourself here...\"\n          value={values[quiz.id]}\n        ></textarea>\n\n        {errors[quiz.id] && <p className=\"error\">{errors[quiz.id]}</p>}\n      </div>\n    ));\n  };\n  return (\n    <>\n      <button className=\"btn--play\" onClick={() => setIsOpen(true)}>\n        Play Quiz\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          {quizes.length > 0 ? (\n            <>\n              {renderQuizContent()}\n              <input\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn-submit question-submit--btn\"\n              />\n            </>\n          ) : (\n            <p className=\"no--result\">No questions found!!!</p>\n          )}\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default PlayQuiz;\n","import React, { useEffect } from \"react\";\nimport AnswerHistory from \"../../Components/AnswerHistory\";\nimport EditAnswer from \"../../Components/EditAnswer\";\n\nimport PlayQuiz from \"../../Components/PlayQuiz\";\nimport {\n  getAnswers,\n  useAnswerState,\n  useAnswerDispatch,\n  useAuthState,\n} from \"../../Context\";\n\nimport \"./answers.css\";\n\nconst Answers = () => {\n  const dispatch = useAnswerDispatch();\n  const { loading, answers } = useAnswerState();\n  const { user } = useAuthState();\n  useEffect(() => {\n    const user_id = user.isAdmin ? \"\" : user.id;\n    getAnswers(dispatch, user_id);\n  }, []);\n\n  const loadingMessage = <div className=\"loading\">Loading answers...</div>;\n  const content = (\n    <>\n      <div className=\"answer-header\">\n        <div className=\"answer-header__serial\">#</div>\n        <div className=\"answer-header__title\">Question</div>\n        <div className=\"answer-header__given\">Answer</div>\n        <div className=\"answer-header__action\">Action</div>\n      </div>\n      <div className=\"answers\">\n        {answers.length > 0 ? (\n          answers.map((item, index) => (\n            <div className=\"answer\" key={item.id}>\n              <div className=\"answer__serial\">{index + 1}</div>\n              <div className=\"answer__title\">{item.title}</div>\n              <div className=\"answer__given\">{item.answer}</div>\n              <div className=\"answer__action\">\n                <EditAnswer\n                  disabled={user.id !== item.user_id}\n                  answerObj={item}\n                  user={user}\n                />\n                <AnswerHistory histories={item.editHistories} />\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"no--result\">No rows found!!!</p>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"answer-wrapper\">\n      <PlayQuiz user={user} />\n      {loading ? loadingMessage : content}\n    </div>\n  );\n};\n\nexport default Answers;\n","import React from \"react\";\n\nimport { useQuestionDispatch, deleteQuestion } from \"../../Context\";\n\nimport \"./delete.css\";\n\nconst Delete = ({ id }) => {\n  const dispatch = useQuestionDispatch();\n  const handleClick = async () => {\n    if (window.confirm(\"Delete the item?\")) {\n      await deleteQuestion(dispatch, id);\n    }\n  };\n  return (\n    <button className=\"btn btn--delete\" onClick={handleClick}>\n      Delete\n    </button>\n  );\n};\n\nexport default Delete;\n","import React, { useState } from \"react\";\n\nimport {\n  useQuestionState,\n  useQuestionDispatch,\n  editQuestion,\n} from \"../../Context\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport Modal from \"../Modal\";\n\nimport \"./editquestion.css\";\n\nconst EditQuestion = ({ id, question }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { loading, errorMessage } = useQuestionState();\n  const dispatch = useQuestionDispatch();\n\n  const validateEditQuestionForm = (values) => {\n    const errors = {};\n    if (values.question === \"\") {\n      errors.question = \"Question must not be empty\";\n    }\n    return errors;\n  };\n  const doSubmit = async ({ question }) => {\n    const payload = { id, title: question };\n    const response = await editQuestion(dispatch, payload);\n    if (response.length > 0) {\n      setIsOpen(false);\n    }\n  };\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      question,\n    },\n    doSubmit,\n    validateEditQuestionForm,\n    false\n  );\n  return (\n    <>\n      <button className=\"btn btn--edit\" onClick={() => setIsOpen(true)}>\n        Edit\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\n          <div className=\"input-group\">\n            <label className=\"input-label\" htmlFor=\"question__title\">\n              Question Title\n            </label>\n            <input\n              type=\"text\"\n              className=\"input-field\"\n              id=\"question__title\"\n              name=\"question\"\n              onChange={onChange}\n              value={values.question}\n            />\n            {errors.question && <p className=\"error\">{errors.question}</p>}\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Update\"\n            className=\"btn-submit question-submit--btn\"\n            disabled={loading}\n          />\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditQuestion;\n","import React, { useState, useEffect } from \"react\";\n\nimport Modal from \"../../Components/Modal\";\nimport { useForm } from \"../../Utils/react-utils\";\nimport { uuid } from \"../../Utils/utils\";\nimport {\n  getQuestions,\n  addQuestion,\n  useQuestionState,\n  useQuestionDispatch,\n} from \"../../Context\";\nimport Delete from \"../../Components/Delete\";\nimport EditQuestion from \"../../Components/EditQuestion\";\n\nimport \"./questions.css\";\n\nconst Questions = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useQuestionDispatch();\n  const { loading, errorMessage, questions } = useQuestionState();\n\n  const validateQuestionForm = (values) => {\n    const errors = {};\n    if (values.question === \"\") {\n      errors.question = \"Question must not be empty\";\n    }\n    return errors;\n  };\n\n  const doSubmit = async ({ question }) => {\n    const payload = { id: uuid(), title: question };\n    const response = await addQuestion(dispatch, payload);\n    if (response.length > 0) {\n      setIsOpen(false);\n    }\n  };\n\n  const { onChange, onSubmit, values, errors } = useForm(\n    {\n      question: \"\",\n    },\n    doSubmit,\n    validateQuestionForm\n  );\n\n  useEffect(() => {\n    getQuestions(dispatch);\n  }, []);\n\n  const loadingMessage = <div className=\"loading\">Loading questions...</div>;\n  const content = (\n    <>\n      <div className=\"question-header\">\n        <div className=\"question-header__serial\">#</div>\n        <div className=\"question-header__title\">Title</div>\n        <div className=\"question-header__action\">Action</div>\n      </div>\n      <div className=\"questions\">\n        {questions.length > 0 ? (\n          questions.map((question, index) => (\n            <div className=\"question\" key={question.id}>\n              <div className=\"question__serial\">{index + 1}</div>\n              <div className=\"question__title\">{question.title}</div>\n              <div className=\"question__action\">\n                <EditQuestion id={question.id} question={question.title} />\n                <Delete id={question.id} />\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"no--result\">No question added yet!!!</p>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"question-wrapper\">\n      <button className=\"add-question\" onClick={() => setIsOpen(true)}>\n        Add Question\n      </button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <form className=\"question__form\" onSubmit={onSubmit} noValidate>\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\n          <div className=\"input-group\">\n            <label className=\"input-label\" htmlFor=\"question__title\">\n              Question Title\n            </label>\n            <input\n              type=\"text\"\n              className=\"input-field\"\n              id=\"question__title\"\n              name=\"question\"\n              onChange={onChange}\n              value={values.question}\n            />\n            {errors.question && <p className=\"error\">{errors.question}</p>}\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Add\"\n            className=\"btn-submit question-submit--btn\"\n            disabled={loading}\n          />\n        </form>\n      </Modal>\n      {loading ? loadingMessage : content}\n    </div>\n  );\n};\n\nexport default Questions;\n","import Login from \"../Pages/Login\";\nimport Answers from \"../Pages/Answers\";\nimport Questions from \"../Pages/Questions\";\nimport NotFound from \"../Pages/NotFound\";\n\nconst routes = [\n  {\n    path: \"/login\",\n    component: Login,\n    isPrivate: false,\n    onlyAdmin: false,\n  },\n  {\n    path: \"/questions\",\n    component: Questions,\n    isPrivate: true,\n    onlyAdmin: true,\n  },\n  {\n    path: \"/answers\",\n    component: Answers,\n    isPrivate: true,\n    onlyAdmin: false,\n  },\n  {\n    path: \"/*\",\n    component: NotFound,\n    isPrivate: true,\n    onlyAdmin: false,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\n\nimport \"./notfound.css\";\n\nconst NotFound = () => {\n  return <div className=\"notfound-wrapper\">NotFound</div>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { useAuthState } from \"../Context\";\n\nconst AppRoutes = ({\n  component: Component,\n  path,\n  isPrivate,\n  onlyAdmin,\n  ...rest\n}) => {\n  const userDetails = useAuthState();\n\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        if (isPrivate) {\n          if (!userDetails.user) {\n            return <Redirect to={{ pathname: \"/login\" }} />;\n          } else {\n            if (onlyAdmin && !userDetails.user.isAdmin) {\n              return <Redirect to={{ pathname: \"/answers\" }} />;\n            } else {\n              return <Component {...props} />;\n            }\n          }\n        } else {\n          return <Component {...props} />;\n        }\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default AppRoutes;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { useAuthState, useAuthDispatch, logout } from \"../../Context\";\n\nimport \"./navabr.css\";\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useAuthDispatch();\n  const { user } = useAuthState();\n  const toggleHandle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n  const handleLogout = () => {\n    logout(dispatch);\n    window.location = \"/\";\n  };\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-header__top\">\n        <div className=\"page-header__brand\">Quiz</div>\n        <div className=\"page-header__toggle\" onClick={toggleHandle}>\n          ☰\n        </div>\n      </div>\n      <nav className=\"page-header__bottom\">\n        <div\n          id=\"navigation\"\n          className={`navigation ${open ? \"navigation--visible\" : \"\"}`}\n          onClick={() => (open ? setOpen(false) : null)}\n        >\n          {user && (\n            <>\n              {user.isAdmin && (\n                <NavLink className=\"navigation__item\" to=\"/questions\">\n                  Questions\n                </NavLink>\n              )}\n              <NavLink className=\"navigation__item\" to=\"/answers\">\n                Answers\n              </NavLink>\n\n              <div className=\"navigation__item\" onClick={handleLogout}>\n                Logout\n              </div>\n            </>\n          )}\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport routes from \"./Config/routes.js\";\nimport AppRoute from \"./Components/AppRoutes\";\nimport { AuthProvider, QuestionProvider, AnswerProvider } from \"./Context\";\nimport Navbar from \"./Components/Navbar/index.js\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <QuestionProvider>\n        <AnswerProvider>\n          <Router>\n            <Navbar />\n            <Switch>\n              {routes.map((route) => (\n                <AppRoute\n                  key={route.path}\n                  path={route.path}\n                  component={route.component}\n                  isPrivate={route.isPrivate}\n                  onlyAdmin={route.onlyAdmin}\n                />\n              ))}\n            </Switch>\n          </Router>\n        </AnswerProvider>\n      </QuestionProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}